version: "3"

services:

  svelte-web:
    container_name: svelte-web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: always
    ports:
      - 3080:3000
    environment:
      PUBLIC_PORT: 3000
      # cors
      #PUBLIC_PAYLOAD_SERVER_URL: http://koakh-laptop:4080
    networks:
      - app_network

  payload-server:
    container_name: payload-server
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    restart: always
    depends_on:
      - db
    ports:
      - 4080:4000
    environment:
      PAYLOAD_SECRET: "PAYLOAD_SECRET_STUB"
      MONGO_URL: "mongodb://db:27017/svelte-kit-payload-cms-with-trpc-and-turbo-repo-starter"
      # NODE_ENV: "development"
      # override default 3000 port : process.env.PORT || 3000;
      # PORT: 4000
      # cors
      CLIENT_EXTRA_CORS: http://koakh-laptop:3080
      PUBLIC_PAYLOAD_SERVER_URL: http://koakh-laptop:4080
      PAYLOAD_PUBLIC_SERVER_URL: http://koakh-laptop:4080
    # debug
    # command: sleep infinity
    networks:
      - app_network

  db:
    image: mongo:4.2
    container_name: db
    # ports:
    #   - "27017:27017/tcp"
    restart: always
    volumes:
      - ./volumes/data/db:/data/db
    command:
      - --storageEngine=wiredTiger
    logging:
      driver: none
    networks:
      - app_network

  astro-web:
    restart: unless-stopped
    build:
      context: ./website
      network: host
      target: production
      extra_hosts:
        - 'cms.localhost:127.0.0.1'
      args:
        - 'CACHE_DATE=$(date +%Y-%m-%d:%H:%M:%S)'
        - 'DIRECTUS_URL=http://cms.localhost'
        - 'DIRECTUS_EMAIL=admin@example.com'
        - 'DIRECTUS_PASSWORD=d1r3ctu5'
        - 'DIRECTUS_STATIC_TOKEN='
    image: astroweb:v1.0
    networks:
      - directus
    depends_on:
      - nginx
    volumes:
      - './website/nginx/conf.d:/etc/nginx/conf.d:rw'

  nginx:
    restart: unless-stopped
    container_name: nginx
    image: nginx:1.23.3-alpine
    volumes:
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:rw'
    ports:
      - '80:80'
      - '433:433'
    depends_on:
      - directus
    networks:
      - directus
    extra_hosts:
      - 'host.docker.internal:host-gateway'


# Define a network with `docker network create app_network`, which allows containers to communicate
# with each other, by using their container name as a hostname
volumes:
  db-data:
  uploads:

networks:
  directus:
    driver: bridge

  app_network:
    external: true
